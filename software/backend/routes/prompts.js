const express = require('express');
const router = express.Router();

/**
 * @swagger
 * /api/prompts:
 *   get:
 *     summary: Obtener prompts predefinidos sugeridos
 *     tags: [Vistas]
 *     responses:
 *       200:
 *         description: Lista de prompts sugeridos organizados por categor√≠as
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 prompts:
 *                   type: array
 *                   items:
 *                     type: object
 *                     properties:
 *                       id:
 *                         type: string
 *                       titulo:
 *                         type: string
 *                       prompt:
 *                         type: string
 *                       categoria:
 *                         type: string
 */
router.get('/', (req, res) => {
  try {
    const promptsSugeridos = [
      {
        id: 'riesgo-actual',
        titulo: 'ü¶ü Evaluar Riesgo Actual',
        prompt: '¬øCu√°l es el nivel de riesgo actual de proliferaci√≥n de mosquitos seg√∫n las condiciones ambientales?',
        categoria: 'An√°lisis'
      },
      {
        id: 'tendencias',
        titulo: 'üìà Analizar Tendencias',
        prompt: 'Analiza las tendencias de los √∫ltimos datos y predice c√≥mo evolucionar√°n las condiciones en las pr√≥ximas 24 horas.',
        categoria: 'Predicci√≥n'
      },
      {
        id: 'recomendaciones',
        titulo: 'üí° Obtener Recomendaciones',
        prompt: 'Bas√°ndote en las condiciones actuales, ¬øqu√© medidas de control vectorial recomendar√≠as implementar?',
        categoria: 'Recomendaciones'
      },
      {
        id: 'condiciones-optimas',
        titulo: 'üå°Ô∏è Condiciones √ìptimas',
        prompt: '¬øLas condiciones actuales de temperatura y humedad favorecen la reproducci√≥n de mosquitos Aedes aegypti?',
        categoria: 'Evaluaci√≥n'
      },
      {
        id: 'alerta-temprana',
        titulo: '‚ö†Ô∏è Sistema de Alerta',
        prompt: '¬øDeber√≠a activarse alguna alerta epidemiol√≥gica bas√°ndose en los par√°metros actuales?',
        categoria: 'Alertas'
      },
      {
        id: 'comparacion-historica',
        titulo: 'üìä Comparaci√≥n Hist√≥rica',
        prompt: '¬øC√≥mo se comparan las condiciones actuales con el mismo per√≠odo del a√±o pasado?',
        categoria: 'Hist√≥rico'
      },
      {
        id: 'impacto-sonido',
        titulo: 'üîä An√°lisis Ac√∫stico',
        prompt: '¬øQu√© informaci√≥n epidemiol√≥gica puede extraerse de los niveles de sonido detectados?',
        categoria: 'An√°lisis'
      },
      {
        id: 'co2-correlacion',
        titulo: 'üí® An√°lisis CO2',
        prompt: '¬øExiste alguna correlaci√≥n entre los niveles de CO2 y la actividad vectorial en esta zona?',
        categoria: 'Correlaci√≥n'
      }
    ];

    // Organizar por categor√≠as
    const categorias = {};
    promptsSugeridos.forEach(prompt => {
      if (!categorias[prompt.categoria]) {
        categorias[prompt.categoria] = [];
      }
      categorias[prompt.categoria].push(prompt);
    });

    res.json({
      success: true,
      prompts: promptsSugeridos,
      por_categoria: categorias,
      total: promptsSugeridos.length,
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('‚ùå Error obteniendo prompts sugeridos:', error);
    res.status(500).json({
      success: false,
      error: 'Error obteniendo prompts sugeridos'
    });
  }
});

module.exports = router;
